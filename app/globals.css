:root {
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, Cantarell, Ubuntu, roboto, noto, helvetica, arial, sans-serif;
    
    /* Color Variables */
    --primary-color: #3498db;
    --primary-rgb: 52, 152, 219;
    --secondary-color: #2ecc71;
    --danger-color: #e74c3c;
    --danger-rgb: 231, 76, 60;
    --text-primary: #2c3e50; /* Slightly softer black */
    --text-secondary: #7f8c8d; /* Softer gray */
    --bg-color: #f4f6f8; /* Lighter page background */
    --bg-light: #ffffff; /* Element background, was #f1f1f1 */
    --bg-card: #ffffff;
    --border-color: #e1e5e8; /* Softer border */
    --shadow-color: rgba(44, 62, 80, 0.1); /* Shadow based on new text-primary */
    --border-radius: 6px; /* Slightly more rounded default */
    --light-gray: #e9ecef; /* Keep for specific cases if needed */
    --dark-gray: #95a5a6; /* Softer dark gray */

    /* Dark mode variables */
    --text-primary-dark: #ecf0f1; /* Off-white */
    --text-secondary-dark: #bdc3c7; /* Lighter gray */
    --bg-dark: #1c1e22; /* Darker bg */
    --bg-card-dark: #282c30; /* Darker card bg */
    --bg-input-dark: #343a40; /* Darker input bg */
    --border-color-dark: #454a4e; /* Darker border */

    /* Typography Variables */
    --font-size-xs: 0.75rem;  /* 12px */
    --font-size-sm: 0.875rem; /* 14px */
    --font-size-base: 1rem;    /* 16px */
    --font-size-md: 1.125rem; /* 18px */
    --font-size-lg: 1.25rem;  /* 20px */
    --font-size-xl: 1.5rem;   /* 24px */
    --font-size-xxl: 2rem;    /* 32px */
    --font-size-xxxl: 2.5rem; /* 40px */

    --line-height-base: 1.6;
    --line-height-heading: 1.3;

    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
}

html {
    font-size: 100%; /* Base for rem units */
    -webkit-text-size-adjust: 100%;
}

body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: var(--bg-color);
    color: var(--text-primary);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    font-weight: var(--font-weight-normal);
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

a {
    color: inherit;
    text-decoration: none;
}

/* Layout */
.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.container > section {
    margin-bottom: 2rem;
}

.container > section > h2 {
    margin-bottom: 1.5rem; /* Adjusted margin */
    letter-spacing: 0.01em; /* Reduced letter-spacing */
    font-size: var(--font-size-xxl);
    font-weight: var(--font-weight-bold);
    line-height: var(--line-height-heading);
    color: var(--text-primary);
}

/* Apply base heading styles */
h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
    margin-bottom: 0.75rem; /* Default bottom margin for headings */
    font-weight: var(--font-weight-semibold); /* Default heading weight */
    line-height: var(--line-height-heading);
    color: var(--text-primary); /* Ensure headings use primary text color */
}

h1 {
    font-size: var(--font-size-xxxl);
}

h2 {
    font-size: var(--font-size-xxl);
}

h3 {
    font-size: var(--font-size-xl);
}

h4 {
    font-size: var(--font-size-lg);
}

h5 {
    font-size: var(--font-size-md);
}

h6 {
    font-size: var(--font-size-base);
}

p {
    margin-top: 0;
    margin-bottom: 1rem; /* Default bottom margin for paragraphs */
}

/* Buttons */
.btn {
    align-items: center;
    border-radius: var(--border-radius);
    border: 1px solid transparent;
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    font-size: var(--font-size-sm); /* Use typography variable */
    font-weight: var(--font-weight-medium); /* Use typography variable */
    line-height: var(--line-height-base); /* Use typography variable */
    padding: 0.6rem 1.2rem; /* Adjusted padding for new font size */
    text-align: center;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, transform 0.15s ease-in-out;
    user-select: none;
    vertical-align: middle;
    text-decoration: none;
}

.btn:hover {
    transform: translateY(-1px);
}

.btn:active {
    transform: translateY(0px);
}

.btn-primary {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

.btn-primary:hover {
    background-color: color-mix(in srgb, var(--primary-color) 85%, black);
    border-color: color-mix(in srgb, var(--primary-color) 85%, black);
}

.btn-secondary {
    background-color: var(--dark-gray);
    color: white;
    border-color: var(--dark-gray);
}

.btn-secondary:hover {
    background-color: color-mix(in srgb, var(--dark-gray) 85%, black);
    border-color: color-mix(in srgb, var(--dark-gray) 85%, black);
}

.btn-danger {
    background-color: var(--danger-color);
    color: white;
}

.btn-outline {
    background: transparent;
    border: 1px solid var(--primary-color);
    color: var(--primary-color);
}

.btn-outline:hover {
    background: rgba(var(--primary-rgb), 0.1);
}

.calculate-btn {
    margin-top: 1rem;
    padding: 0.75rem;
    background-color: #0070f3;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    font-weight: 500;
}

.calculate-btn:hover {
    background-color: #0060df;
}

/* Forms */
.form-group {
    margin-bottom: 1rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: var(--font-weight-medium); /* Use typography variable */
    font-size: var(--font-size-sm);
}

.form-control {
    display: block;
    width: 100%;
    padding: 0.6rem 0.8rem; /* Adjusted padding */
    font-size: var(--font-size-base); /* Use typography variable */
    line-height: var(--line-height-base);
    color: var(--text-primary);
    background-color: var(--bg-card, white);
    border: 1px solid var(--border-color, var(--light-gray));
    border-radius: var(--border-radius);
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}

.form-control:focus {
    border-color: var(--primary-color);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-rgb),.25);
}

.login-form {
    max-width: 400px;
    margin: 40px auto;
}

.time-form, .ms-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

/* Feed Grid and Cards */
.feed-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

/* Styles from .feed-card down to .page-info are now */
/* primarily handled by FeedCard.module.css. */
/* Removing them here to avoid conflicts and redundancy. */

/* Keeping .feed-title-link and its hover effect if it's used outside FeedCard or as a general utility */
/* However, the inner .feed-title might be too generic or handled by components */
.feed-title-link {
    text-decoration: none;
    color: inherit;
}

.feed-title-link:hover .feed-title { /* This .feed-title class might need to be namespaced if kept */
    color: var(--primary-color);
}

/* .feed-link styles can remain if used as general utility links */
.feed-link {
    color: var(--primary-color);
    font-weight: 500;
    transition: text-decoration 0.2s ease;
}

.feed-link:hover {
    text-decoration: underline;
}

/* Removed old styles for .feed-card, .feed-header, .feed-avatar, .feed-info, .feed-info-full, */
/* .feed-description, .button-group, .avatar-img (if specific to old feed card), */
/* .episode-list, .episode-list.empty, .episode-item, .episode-item:hover, */
/* .episode-header, .episode-avatar, .episode-info, .episode-info-full, .episode-title, */
/* .episode-metadata, .episode-date, .episode-duration, .episode-description, */
/* .metadata-item, .read-more-btn, .episode-actions, .episode-actions-row, */
/* .episode-row-btn, .details-btn, .episode-btn, */
/* .episode-controls, .search-filter-container, .search-input, .year-filter, */
/* .episode-count, .pagination, .pagination-btn, .page-info */

.detail-page {
    padding: 1.5rem 0;
    max-width: 1000px;
    margin: 0 auto;
}

.detail-card {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    background-color: var(--bg-card);
    border-radius: 12px;
    box-shadow: 0 2px 8px var(--shadow-color);
}

.detail-content {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
}

.detail-image-container {
    flex-shrink: 0;
}

.detail-image {
    border-radius: 8px;
    box-shadow: 0 2px 6px var(--shadow-color);
    width: 100%;
    height: auto;
}

.detail-info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: fit-content;
    flex-wrap: wrap;
}

.detail-title {
    font-size: 1.8rem;
    font-weight: 700;
    margin: 0;
    color: var(--text-primary);
}

.detail-metadata {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    color: var(--text-secondary);
}

.detail-description {
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color);
}

.detail-description h2 {
    font-size: 1.4rem;
    margin-bottom: 0.8rem;
    color: var(--text-primary);
}

.detail-listing {
    margin-top: 1.5rem;
}

.detail-listing h2 {
    font-size: 1.4rem;
    margin-bottom: 1rem;
    color: var(--text-primary);
}

.detail-listing-items {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.detail-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.listing-item {
    padding: 1rem;
    border-radius: 8px;
    background-color: var(--bg-card);
    border: 1px solid var(--border-color);
    transition: background-color 0.2s ease;
}

.listing-item:hover {
    background-color: var(--bg-light);
}

.listing-item-title {
    font-weight: 600;
    margin-bottom: 0.3rem;
}

.listing-item-date {
    font-size: 0.85rem;
    color: var(--text-secondary);
}

/* Utility Classes */
.error-message {
    color: var(--danger-color);
    margin-bottom: 1rem;
    padding: 1rem;
    background-color: rgba(var(--danger-rgb), 0.1);
    border-radius: 8px;
    text-align: center;
}

.error {
    color: #e00;
    margin-top: 1rem;
}

.result {
    margin-top: 1rem;
    padding: 1rem;
    background-color: #f5f5f5;
    border-radius: 4px;
    font-weight: 500;
}

.no-items {
    padding: 1.5rem;
    text-align: center;
    color: var(--text-secondary);
    background-color: var(--bg-light);
    border-radius: 8px;
}

.input-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .feed-grid {
        grid-template-columns: 1fr;
    }

    .search-filter-container {
        flex-direction: column;
        gap: 0.5rem;
    }

    .episode-avatar {
        width: 50px;
        height: 50px;
    }

    .episode-actions {
        flex-direction: column;
    }

    .episode-actions-row {
        flex-direction: column;
    }

    .button-container {
        flex-direction: column;
    }

    .detail-content {
        flex-direction: column;
    }

    .detail-image-container {
        max-width: 200px;
        margin: 0 auto 1rem;
    }

    .detail-actions {
        flex-direction: column;
    }

    .input-group {
        flex-direction: row;
        align-items: center;
    }

    label {
        min-width: 100px;
    }

    input, select {
        flex: 1;
    }
}

@media (max-width: 480px) {
    .episode-row-btn {
        width: 100%;
        min-height: 36px;
    }

    .episode-item {
        padding: 0.9rem 1rem;
    }
}

/* Dark Mode Styles */
@media (prefers-color-scheme: dark) {
    body {
        --text-primary: var(--text-primary-dark, #eee);
        --text-secondary: var(--text-secondary-dark, #aaa);
        --bg-color: var(--bg-dark, #1a1a1a);
        --bg-card: var(--bg-card-dark, #2a2a2a);
        --bg-light: var(--bg-input-dark, #333); /* Use for lighter elements in dark mode too, like input backgrounds */
        --border-color: var(--border-color-dark, #444);
        --shadow-color: rgba(255, 255, 255, 0.05); /* Lighter shadow for dark mode */

        /* Adjust primary color for dark mode if needed, e.g., a slightly less saturated version */
        /* For now, keeping primary color same, but this is a place for adjustment */
        /* --primary-color: #your-dark-mode-primary; */ 
    }

    /* Specific overrides for components if variables aren't enough */
    /* For example, to ensure images don't have harsh white backgrounds if they are SVGs or have transparency */
    img, svg {
        /* filter: invert(1) hue-rotate(180deg); /* This is a heavy-handed approach, use with caution */
    }

    .btn-secondary {
        /* Adjust secondary button for dark mode if default var(--dark-gray) is too dark or light */
        background-color: var(--bg-input-dark, #333);
        color: var(--text-primary-dark, #eee);
        border-color: var(--border-color-dark, #444);
    }

    .btn-secondary:hover {
        background-color: color-mix(in srgb, var(--bg-input-dark, #333) 85%, white);
        border-color: color-mix(in srgb, var(--border-color-dark, #444) 85%, white);
    }

    .form-control {
        background-color: var(--bg-input-dark, #333);
        color: var(--text-primary-dark, #eee);
        border-color: var(--border-color-dark, #444);
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem rgba(var(--primary-rgb),.35); /* Slightly adjusted shadow for dark */
    }

    .detail-card, .listing-item {
        box-shadow: 0 2px 8px var(--shadow-color, rgba(255,255,255,0.05));
    }

    /* Ensure FeedCard specific inputs also get dark mode treatment */
    /* This might be better handled by ensuring FeedCard.module.css uses the correct CSS variables */
    /* which it now does (e.g. background: var(--bg-card), border: var(--border-color)) */
}

/* Spinner Animation */
@keyframes spinner-rotation {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.spinner {
    width: 2rem; /* 32px */
    height: 2rem; /* 32px */
    border: 3px solid rgba(var(--primary-rgb), 0.3); /* Lighter primary color for track */
    border-left-color: var(--primary-color); /* Primary color for spinner arc */
    border-radius: 50%;
    display: inline-block;
    animation: spinner-rotation 1s linear infinite;
    margin: 1rem auto; /* Center if used as a block */
}

.loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    color: var(--text-secondary);
    font-size: var(--font-size-md);
}

.loading-container .spinner {
    margin-bottom: 1rem;
}

/* Enhanced No Items Style */
.no-items-enhanced {
    padding: 2rem;
    text-align: center;
    background-color: var(--bg-light);
    border-radius: var(--border-radius);
    border: 1px dashed var(--border-color);
    color: var(--text-secondary);
    margin-top: 1rem; /* Add some space if it follows other content */
}

.no-items-enhanced p {
    margin: 0;
    font-size: var(--font-size-md);
}

.no-items-enhanced svg {
    width: 3rem; /* 48px */
    height: 3rem;
    margin-bottom: 1rem;
    opacity: 0.7;
    color: var(--text-secondary);
}

/* Accessibility: Enhanced Focus Indicators */
*:focus-visible {
  outline: 2px solid var(--primary-color, #3498db);
  outline-offset: 2px;
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb, 52, 152, 219), 0.25);
}

/* Optional: Remove outline for mouse focus if not using :focus-visible for everything */
/* Example: button:focus:not(:focus-visible) { outline: none; } */

